apiVersion: v1
kind: Template
labels:
  template: mysql-dc-template
metadata:
  name: mysql-dc
objects: 
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    name: ${APP_NAME}
  spec:
    replicas: 1
    selector:
      name: ${APP_NAME}
    strategy:
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: ${APP_NAME}
      spec:
        volumes:
          -
            name: ${APP_NAME}
            persistentVolumeClaim:
              claimName: ${APP_NAME}
        containers:
        - capabilities: {}
          image: docker.io/mariadb
          imagePullPolicy: IfNotPresent
          name: ${APP_NAME}
          env:
            -
              name: "MYSQL_ROOT_PASSWORD"
              value: "${MYSQL_ROOT_PASSWORD}"
            -
              name: "MYSQL_USER"
              value: "${MYSQL_USER}"
            -
              name: "MYSQL_PASSWORD"
              value: "${MYSQL_PASSWORD}"
            -
              name: "MYSQL_DATABASE"
              value: "${MYSQL_DATABASE}"
          ports:
            -
              containerPort: 3306
          volumeMounts:
            -
              name: ${APP_NAME}
              mountPath: "/var/lib/mysql"
          livenessProbe:
            tcpSocket:
              port: 3306
            initialDelaySeconds: 30
            periodSeconds: 60
          readinessProbe:
            tcpSocket:
              port: 3306
            initialDelaySeconds: 30
            periodSeconds: 60          
parameters:
- name: SERVICE_NAME
  value: icinga2
- name: APP_NAME
  value: mysql
- name: IMAGE_VERSION
  value: latest
- name: MYSQL_ROOT_PASSWORD
  value: "secret"
- name: MYSQL_USER
  value: "icinga"
- name: MYSQL_PASSWORD
  value: "icinga"
- name: MYSQL_DATABASE
  value: "icinga"
- name: NAMESPACE
  required: true

